---
name: Code Qualification Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  qualify_code:
    runs-on: ubuntu-latest

    steps:
      - name: checkout-repo
        uses: actions/checkout@v5

      - name: setup-python
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
          cache: pip

      - name: install-and-cache-poetry
        run: make -f .config/Makefile install-poetry
        if: steps.cache.outputs.cache-hit != 'true'

      - name: cache-poetry-dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: install-dependencies-with-poetry
        run: |
          poetry lock
          poetry install
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: true
        if: steps.cache.outputs.cache-hit != 'true'

      - name: cache-mypy-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/mypy
          key: ${{ runner.os }}-mypy-${{ hashFiles('**/mypy.ini') }}
          restore-keys: ${{ runner.os }}-mypy-

      - name: check-poetry-version
        run: poetry --version

      - name: lint-with-ruff
        run: make -f .config/Makefile lint-ruff
        continue-on-error: true

      - name: static-type-checks-with-mypy
        run: make -f .config/Makefile static-type-checks
        continue-on-error: true

      - name: Get uv cache directory
        id: get-cache-dir
        run: echo "cache-dir=$(echo ~/.local/bin)" >> $GITHUB_OUTPUT

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-cache-dir.outputs.cache-dir }}
          key: uv-binary-${{ runner.os }}-v1
          restore-keys: |
            uv-binary-${{ runner.os }}-
      
      - name: Install uv (if not cached)
        if: steps.get-cache-dir.outputs.cache-dir == '' || steps.restore-cache.outcome == 'cache-miss'
        run: |
          mkdir -p ~/.local/bin
          curl -LsSf https://astral.sh/uv/install.sh  | sh
          echo "~/.local/bin" >> $GITHUB_PATH

      - name: Add uv to PATH
        run: echo "~/.local/bin" >> $GITHUB_PATH

      - name: Verify uv and uvx
        run: |
          uv --version
          uvx --version          

      - name: static-type-checks-with-ty
        run: uvx ty check
        # continue-on-error: true

      - name: Run tests
        run: poetry run pytest --cov --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: TheNewThinkTank/geometry
